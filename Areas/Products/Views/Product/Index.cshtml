@using System.Globalization;
@model IEnumerable<Product>

@{
    ViewData["Title"] = "Quản lý sản phẩm";
}

<div class="card h-100">
    <div
        class="card-header d-flex flex-md-row justify-content-md-between align-items-md-center flex-column align-items-start">
        <div class="left-header">
            <i class="fas fa-table me-1"></i>
            @ViewData["Title"] (@ViewBag.TotalProduct)
            <a class="btn btn-primary btn-sm rounded-circle ms-1" asp-action="Create" asp-controller="Product"
                asp-area="Products">
                <i class="fa-solid fa-plus"></i>
            </a>
        </div>
        <div class="right-header d-flex align-items-center justify-content-end mt-2 mt-md-0">
            <div class="form-group d-flex align-items-center justify-content-end me-3">
                <div class="col-auto">
                    <button class="btn" id="btn-export-excel">
                        Xuất
                        <i class="fa-solid fa-table text-primary"></i>
                    </button>
                </div>
                <div class="col-auto gx-0">
                    <label class="form-label mb-0 me-1 ms-2 ms-md-0 ">Sắp xếp</label>
                </div>
                <div class="col-auto gx-0 d-flex justify-content-end align-items-center">
                    <div class="dropdown">
                        <a class="btn btn-sm dropdown-toggle" href="#" role="button"
                            style="border: 1px solid #ced4da; background-color: #fff;" data-bs-toggle="dropdown"
                            aria-expanded="false">
                            @switch (Context.Request.Query["sort"])
                            {
                                case "name":
                                    @("Tên sản phẩm")
                                    break;
                                case "sellprice":
                                    @("Giá bán")
                                    break;
                                case "sold":
                                    @("Đã bán")
                                    break;
                                default:
                                    @("Ngày nhập kho")
                                    break;
                            }
                        </a>

                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item"
                                    href='@Url.Action("Index", "Product", new {area = "Products", s = Context.Request.Query["s"], sort = "entrydate"})'>Ngày
                                    nhập kho</a></li>
                            <li><a class="dropdown-item"
                                    href='@Url.Action("Index", "Product", new {area = "Products", s = Context.Request.Query["s"], sort = "name"})'>Tên
                                    sản phẩm</a></li>
                            <li><a class="dropdown-item"
                                    href='@Url.Action("Index", "Product", new {area = "Products", s = Context.Request.Query["s"], sort = "sellprice"})'>Giá
                                    bán</a></li>
                            <li><a class="dropdown-item"
                                    href='@Url.Action("Index", "Product", new {area = "Products", s = Context.Request.Query["s"], sort = "sold"})'>Đã
                                    bán</a></li>
                        </ul>
                    </div>
                    <div style="font-size: 12px;">
                        @{
                            string orderSort = ViewBag.OrderSort == "desc" ? "asc" : "desc";
                        }
                        <a class="text-dark sort-order d-flex flex-column ms-2 text-decoration-none"
                            href='@Url.Action("Index", "Product", new { area = "Products", s = Context.Request.Query["s"], sort = Context.Request.Query["sort"], sortOrder = @orderSort})'>
                            <i class='fa-solid fa-angle-up @if(!string.IsNullOrEmpty(Context.Request.Query["sortOrder"]) && Context.Request.Query["sortOrder"] == "asc") {
                            @("text-primary")
}'></i>
                            <i class='fa-solid fa-angle-down @if(string.IsNullOrEmpty(Context.Request.Query["sortOrder"]) || Context.Request.Query["sortOrder"] == "desc") {
                            @("text-primary")
}'></i>
                        </a>
                    </div>
                </div>
            </div>
            <form method="get">
                <div class="input-group-sm d-flex justify-content-end align-items-center">
                    <input class="form-control" type="text" name="s" placeholder="Tìm kiếm...."
                        value="@Context.Request.Query["s"]">
                    <button class="btn" type="submit">
                        <i class="text-primary fa-solid fa-magnifying-glass"></i>
                    </button>
                </div>
            </form>
            <a class="ms-1" asp-action="Index" asp-controller="Product" asp-area="Products">
                <i class="text-danger fa-solid fa-xmark"></i>
            </a>
        </div>
    </div>
    <div class="card-body scroll-x">
        @if (!string.IsNullOrEmpty(Context.Request.Query["s"]))
        {
            <span class="mb-1">Kết quả tìm kiếm cho: <span class="fw-semibold">@Context.Request.Query["s"]</span></span>
        }
        <table class="table table-bordered mt-2">
            <thead>
                <tr class="text-center">
                    <th>@Html.DisplayNameFor(model => model.Code)</th>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>Hãng</th>
                    <th>@Html.DisplayNameFor(model => model.EntryDate)</th>
                    <th>Giá bán (Min)</th>
                    <th>Đã bán</th>
                    <th>SL kho</th>
                    <th>Hiển thị</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="text-center">
                        <td>@item.Code</td>
                        <td>
                            <a class="text-decoration-none" asp-action="Details" asp-controller="Product"
                                asp-area="Products" asp-route-Id="@item.Id">
                                @item.Name
                            </a>
                        </td>
                        <td>@item.Brand?.Name</td>
                        <td>@item.EntryDate.ToShortDateString()</td>
                        <td>@item.Colors.SelectMany(c => c.Capacities).Min(c => c.SellPrice).ToString("N0", new
                                     CultureInfo("vi-VN"))<sup>đ</sup></td>
                        <td>@item.Colors.SelectMany(c => c.Capacities).Sum(c => c.Sold)</td>
                        <td>@item.Colors.SelectMany(c => c.Capacities).Sum(c => c.Quantity)</td>
                        <td>@if (item.Published)
                            {
                                <i class="fa-solid fa-check text-success"></i>
                            }
                            else
                            {
                                <i class="fa-solid fa-xmark text-danger"></i>
                            }
                        </td>
                        <td>
                            <div class="d-flex justify-content-center">
                                <a class="text-primary text-decoration-none" asp-action="Edit" asp-controller="Product"
                                    asp-area="Products" asp-route-Id="@item.Id">
                                    <i class="fa-regular fa-pen-to-square"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @{
            var pagingModel = new PagingModel()
            {
                CurrentPage = ViewBag.CurrentPage,
                CountPage = ViewBag.TotalPage,
                GenerateUrl = p => Url.Action("Index", "Product", new
                {
                    area = "Products",
                    p,
                    s = Context.Request.Query["s"],
                    sort = Context.Request.Query["sort"],
                    sortOrder = Context.Request.Query["sortOrder"]
                }) ?? ""
            };
        }
        <partial name="_Paging" model="@pagingModel"></partial>
        <partial name="_AlertMessage"></partial>
    </div>
</div>

@* Toast *@
<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="liveToast" class="toast fade hide" role="alert" aria-live="assertive" aria-atomic="true">
    </div>
</div>

@section Scripts
{
    <script type="module" src="/js/Products/adminIndex.js"></script>
}